{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Sea",
	"patterns": [
		{ "include": "#raw" },
		{ "include": "#constants" },
		{ "include": "#strings" },
		{ "include": "#keywords" },
		{ "include": "#types" },
		{ "include": "#comments" },
		{ "include": "#hashtags" }
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.operator.new.sea",
					"match": "\\bnew\\b"
				},
				{
					"name": "keyword.operator.namespace.sea",
					"match": "\\b'\\b"
				},
				{
					"name": "storage.type.sea",
					"match": "\\b(var|let|def)\\b"
				},
				{
					"name": "storage.type.pkg.sea",
					"match": "\\bpkg\\b"
				},
				{
					"name": "storage.type.function.sea",
					"match": "\\bfun\\b"
				},
				{
					"name": "storage.type.rec.sea",
					"match": "\\brec\\b"
				},
				{
					"name": "storage.type.tag.sea",
					"match": "\\btag\\b"
				},
				{
					"name": "keyword.other.macro.sea",
					"match": "\\bmac\\b"
				},
				{
					"name": "keyword.control.sea",
					"match": "\\b(use|raw|ret|if|else|for|break|continue|of|defer|ref|as|to|in|switch|case|fall|not|and|or)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.sea",
					"match": "\\b\\-?[0-9_]+([fdlu]|(.[0-9_]+[fd]))?\\b"
				},
				{
					"name": "constant.numeric.hex.sea",
					"match": "\\b0x[0-9a-f_]+\\b"
				},
				{
					"name": "constant.numeric.binary.sea",
					"match": "\\b0b[01_]+\\b"
				},
				{
					"name": "constant.other.boolean.sea",
					"match": "\\b(true|false|nil)\\b"
				},
				{
					"name": "constant.character.escape.sea",
					"match": "\\\\."
				},
				{
					"name": "constant.character.sea",
					"match": "`[^`]*`"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.sea",
			"begin": "c?\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sea",
					"match": "\\\\."
				}
			]
		},
		"raw": {
			"name": "meta.embedded.block.c.sea",
			"begin": "raw\\[",
			"end": "\\]",
			"patterns": [{ "include": "source.c" }]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.documentation.sea",
					"match": "///.*"
				},
				{
					"name": "comment.block.documentation.sea",
					"begin": "/\\*\\*",
					"end": "\\*\\*/"
				},
				{
					"name": "comment.line.double-slash.sea",
					"match": "//.*"
				},
				{
					"name": "comment.block.sea",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"hashtags": {
			"patterns": [
				{
					"name": "keyword.control.hashtag.sea",
					"match": "#[a-zA-Z0-9_$]+"
				},
				{
					"name": "keyword.control.hashtag.list.sea",
					"match": "#\\([a-zA-Z0-9_$]+(,\\s*[a-zA-Z0-9_$]+)\\)*"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.built-in.primitive.sea",
					"match": "\\b(void|char|bool|int|i8|i16|i32|i64|u8|u16|u32|u64|float|f32|double|f64|usize)\\b"
				},
				{
					"name": "storage.type.built-in.sea",
					"match": "\\b(String|Any)\\b"
				}
			]
		}
	},
	"scopeName": "source.sea"
}
